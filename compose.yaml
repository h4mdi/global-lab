services:
  vote:
    build:
      context: ./vote
      dockerfile: Dockerfile
    image: docker.io/${DOCKERHUB_USERNAME}/vote:${IMAGE_TAG}
    depends_on:
      - redis
    networks:
      - front-tier
      - back-tier

  vote-ui:
    build:
      context: ./vote-ui
      dockerfile: Dockerfile
    image: docker.io/${DOCKERHUB_USERNAME}/vote-ui:${IMAGE_TAG}
    depends_on:
      - vote
    ports:
      - "5000:80"
    networks:
      - front-tier

  result:
    build:
      context: ./result
      dockerfile: Dockerfile
    image: docker.io/${DOCKERHUB_USERNAME}/result:${IMAGE_TAG}
    depends_on:
      - db
    networks:
      - front-tier
      - back-tier

  result-ui:
    build:
      context: ./result-ui
      dockerfile: Dockerfile
    image: docker.io/${DOCKERHUB_USERNAME}/result-ui:${IMAGE_TAG}
    depends_on:
      result:
        condition: service_started
    ports:
      - "5001:80"
    networks:
      - front-tier

  worker:
    build:
      context: ./worker/src
      dockerfile: Dockerfile
    image: docker.io/${DOCKERHUB_USERNAME}/worker:${IMAGE_TAG}
    depends_on:
      - redis
      - db
    networks:
      - back-tier

  redis:
    image: redis:7.0.5-alpine3.16
    ports:
      - "6379:6379"
    networks:
      - back-tier

  db:
    image: postgres:15.0-alpine3.16
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - back-tier

volumes:
  db-data:

networks:
  front-tier:
  back-tier:
